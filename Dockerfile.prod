# Production Dockerfile
FROM openjdk:21-jdk-slim AS builder

# Set working directory
WORKDIR /app

# Install Maven
RUN apt-get update && apt-get install -y maven && rm -rf /var/lib/apt/lists/*

# Copy pom.xml first for better Docker layer caching
COPY pom.xml .

# Download dependencies
RUN mvn dependency:resolve

# Copy source code and build
COPY src ./src
RUN mvn clean package -DskipTests -Dspring.profiles.active=prod

# Production runtime stage with distroless image for minimal attack surface
FROM gcr.io/distroless/java21-debian12

# Create application directory
WORKDIR /app

# Copy built JAR from builder stage
COPY --from=builder /app/target/*.jar app.jar

# Create non-root user for security (distroless already has nonroot user)
USER nonroot:nonroot

# Expose application port
EXPOSE 8080

# Set JVM options for production (optimized for performance and monitoring)
ENV JAVA_OPTS="-Xms1024m -Xmx2048m -XX:+UseG1GC -XX:MaxGCPauseMillis=100 -XX:+UseStringDeduplication -XX:+OptimizeStringConcat -server -Djava.security.egd=file:/dev/./urandom -Dspring.profiles.active=prod"

# Run the application
ENTRYPOINT ["sh", "-c", "java $JAVA_OPTS -jar app.jar"]