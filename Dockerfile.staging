# Staging Dockerfile
FROM openjdk:21-jdk-slim AS builder

# Set working directory
WORKDIR /app

# Install Maven
RUN apt-get update && apt-get install -y maven && rm -rf /var/lib/apt/lists/*

# Copy pom.xml first for better Docker layer caching
COPY pom.xml .

# Download dependencies
RUN mvn dependency:resolve

# Copy source code and build
COPY src ./src
RUN mvn clean package -DskipTests -Dspring.profiles.active=staging

# Runtime stage
FROM openjdk:21-jre-slim

# Create non-root user for security
RUN groupadd -r adplatform && useradd -r -g adplatform adplatform

# Set working directory
WORKDIR /app

# Copy built JAR from builder stage
COPY --from=builder /app/target/*.jar app.jar

# Install curl for health checks
RUN apt-get update && apt-get install -y curl && rm -rf /var/lib/apt/lists/*

# Change ownership to non-root user
RUN chown -R adplatform:adplatform /app
USER adplatform

# Expose application port
EXPOSE 8080

# Set JVM options for staging (with monitoring and some debugging)
ENV JAVA_OPTS="-Xms512m -Xmx1024m -XX:+UseG1GC -XX:+PrintGCDetails -XX:+PrintGCTimeStamps -Dspring.profiles.active=staging"

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=60s --retries=3 \
    CMD curl -f http://localhost:8080/actuator/health || exit 1

# Run the application
CMD ["sh", "-c", "java $JAVA_OPTS -jar app.jar"]